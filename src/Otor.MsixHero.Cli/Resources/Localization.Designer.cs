//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Otor.MsixHero.Cli.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Otor.MsixHero.Cli.Resources.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expires:    {0}.
        /// </summary>
        public static string CLI_CertificateSummary_Expires_Aligned_Format {
            get {
                return ResourceManager.GetString("CLI_CertificateSummary_Expires_Aligned_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expires:    &lt;never&gt;.
        /// </summary>
        public static string CLI_CertificateSummary_ExpiresNever_Aligned {
            get {
                return ResourceManager.GetString("CLI_CertificateSummary_ExpiresNever_Aligned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer:     {0}.
        /// </summary>
        public static string CLI_CertificateSummary_Issuer_Aligned_Format {
            get {
                return ResourceManager.GetString("CLI_CertificateSummary_Issuer_Aligned_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed by:  {0}.
        /// </summary>
        public static string CLI_CertificateSummary_SignedBy_Aligned_Format {
            get {
                return ResourceManager.GetString("CLI_CertificateSummary_SignedBy_Aligned_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed by:  {0} (untrusted).
        /// </summary>
        public static string CLI_CertificateSummary_SignedByUntrusted_Aligned_Format {
            get {
                return ResourceManager.GetString("CLI_CertificateSummary_SignedByUntrusted_Aligned_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbprint: {0}.
        /// </summary>
        public static string CLI_CertificateSummary_Thumbprint_Aligned_Format {
            get {
                return ResourceManager.GetString("CLI_CertificateSummary_Thumbprint_Aligned_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        public static string CLI_Error_FileNotExists_Format {
            get {
                return ResourceManager.GetString("CLI_Error_FileNotExists_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Document root cannot be empty..
        /// </summary>
        public static string CLI_Error_Manifest_Empty {
            get {
                return ResourceManager.GetString("CLI_Error_Manifest_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; could not be added because the destination file &apos;{1}&apos; already exists..
        /// </summary>
        public static string CLI_Executor_AddFile_Error_AlreadyExists_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AddFile_Error_AlreadyExists_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can force replacement of the file by using --force switch..
        /// </summary>
        public static string CLI_Executor_AddFile_Error_AlreadyExists_Hint {
            get {
                return ResourceManager.GetString("CLI_Executor_AddFile_Error_AlreadyExists_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; could not be added to &apos;{1}&apos;..
        /// </summary>
        public static string CLI_Executor_AddFile_Error_CouldNotAdd_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AddFile_Error_CouldNotAdd_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file cannot be added directly..
        /// </summary>
        public static string CLI_Executor_AddFile_Error_DirectManifestImport {
            get {
                return ResourceManager.GetString("CLI_Executor_AddFile_Error_DirectManifestImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        public static string CLI_Executor_AddFile_Error_Missing_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AddFile_Error_Missing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; has been imported into &apos;{1}&apos;..
        /// </summary>
        public static string CLI_Executor_AddFile_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AddFile_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating volume(s) in &apos;{0}&apos;….
        /// </summary>
        public static string CLI_Executor_AppAttach_CreatingVolumes_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_CreatingVolumes_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter --name/-n cannot be used with more than one instance of the --package/-p switch..
        /// </summary>
        public static string CLI_Executor_AppAttach_Error_NameSwitchConflict {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Error_NameSwitchConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command can be started only by a local administrator..
        /// </summary>
        public static string CLI_Executor_AppAttach_Error_NotAdmin {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Error_NotAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter --size/-s cannot be used with target type CIM..
        /// </summary>
        public static string CLI_Executor_AppAttach_Error_SizeCimSwitchConflict {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Error_SizeCimSwitchConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter --size/-s cannot be used with more than one instance of the --package/-p switch..
        /// </summary>
        public static string CLI_Executor_AppAttach_Error_SizeSwitchConflict {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Error_SizeSwitchConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracted certificate file &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_AppAttach_Success_Certificate_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Success_Certificate_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created volume &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_AppAttach_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created definition: &apos;{0}&apos; with the following parameters:.
        /// </summary>
        public static string CLI_Executor_AppAttach_Success_Json_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Success_Json_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created scripts: &apos;{0}&apos;, &apos;{1}&apos;, &apos;{2}&apos;, &apos;{3}&apos;..
        /// </summary>
        public static string CLI_Executor_AppAttach_Success_Scripts_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_AppAttach_Success_Scripts_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build meta data name cannot be empty..
        /// </summary>
        public static string CLI_Executor_BuildMetaData_Error_EmptyName {
            get {
                return ResourceManager.GetString("CLI_Executor_BuildMetaData_Error_EmptyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build meta data version cannot be empty..
        /// </summary>
        public static string CLI_Executor_BuildMetaData_Error_EmptyVersion {
            get {
                return ResourceManager.GetString("CLI_Executor_BuildMetaData_Error_EmptyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build meta data &apos;{0}&apos; could not be added..
        /// </summary>
        public static string CLI_Executor_BuildMetaData_Error_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_BuildMetaData_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed &apos;{0}&apos; from &apos;{1}&apos; to &apos;{2}&apos;..
        /// </summary>
        public static string CLI_Executor_BuildMetaData_Success_Change_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_BuildMetaData_Success_Change_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        public static string CLI_Executor_BuildMetaData_Success_Set_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_BuildMetaData_Success_Set_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capability &apos;{0}&apos; could not be added..
        /// </summary>
        public static string CLI_Executor_Capability_Error_CouldNotAdd_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Error_CouldNotAdd_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capability name cannot be empty..
        /// </summary>
        public static string CLI_Executor_Capability_Error_Empty {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Error_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a GUID nor a valid string..
        /// </summary>
        public static string CLI_Executor_Capability_Error_NotGuid_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Error_NotGuid_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is longer than {1} characters..
        /// </summary>
        public static string CLI_Executor_Capability_Error_TooLong_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Error_TooLong_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added custom capability &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_Capability_Success_Custom_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Success_Custom_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added restricted capability &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_Capability_Success_Restricted_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Success_Restricted_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added standard capability &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_Capability_Success_Standard_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Capability_Success_Standard_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not delete registry key &apos;{0}\{1}&apos;..
        /// </summary>
        public static string CLI_Executor_DeleteRegistryKey_Error_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_DeleteRegistryKey_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry key &apos;{0}\{1}&apos; has been removed..
        /// </summary>
        public static string CLI_Executor_DeleteRegistryKey_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_DeleteRegistryKey_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry value &apos;{0}&apos; could not be removed from &apos;{1}\{2}&apos;..
        /// </summary>
        public static string CLI_Executor_DeleteRegistryValue_Error_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_DeleteRegistryValue_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry value &apos;{0}&apos; has been removed from &apos;{1}\{2}..
        /// </summary>
        public static string CLI_Executor_DeleteRegistryValue_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_DeleteRegistryValue_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading dependencies….
        /// </summary>
        public static string CLI_Executor_Dependencies_Reading {
            get {
                return ResourceManager.GetString("CLI_Executor_Dependencies_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did you mean &apos;{0}&apos;?.
        /// </summary>
        public static string CLI_Executor_DidYouMean_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_DidYouMean_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; does not exist..
        /// </summary>
        public static string CLI_Executor_Error_PathNotExist_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Error_PathNotExist_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; is neither a directory with extracted MSIX, an .MSIX package or a manifest file..
        /// </summary>
        public static string CLI_Executor_Error_PathNotSupported_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Error_PathNotSupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting certificate from &apos;{0}&apos;….
        /// </summary>
        public static string CLI_Executor_ExtractCert_Extracting_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_ExtractCert_Extracting_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate has been extracted..
        /// </summary>
        public static string CLI_Executor_ExtractCert_Success {
            get {
                return ResourceManager.GetString("CLI_Executor_ExtractCert_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the file path or the local registry path must be provided..
        /// </summary>
        public static string CLI_Executor_ImportRegistry_Error_InputMissing {
            get {
                return ResourceManager.GetString("CLI_Executor_ImportRegistry_Error_InputMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry key must be a path starting with a valid hive name..
        /// </summary>
        public static string CLI_Executor_ImportRegistry_Error_InvalidHive {
            get {
                return ResourceManager.GetString("CLI_Executor_ImportRegistry_Error_InvalidHive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry file &apos;{0}&apos; does not exist..
        /// </summary>
        public static string CLI_Executor_ImportRegistry_Error_MissingFile_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_ImportRegistry_Error_MissingFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry hive {0} is not supported..
        /// </summary>
        public static string CLI_Executor_ImportRegistry_Error_UnsupportedHive_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_ImportRegistry_Error_UnsupportedHive_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; does not exist..
        /// </summary>
        public static string CLI_Executor_List_Error_MissingFile_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_List_Error_MissingFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one command must be passed..
        /// </summary>
        public static string CLI_Executor_List_Error_NoCommands {
            get {
                return ResourceManager.GetString("CLI_Executor_List_Error_NoCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file contains no commands..
        /// </summary>
        public static string CLI_Executor_List_Error_NoCommandsInFile {
            get {
                return ResourceManager.GetString("CLI_Executor_List_Error_NoCommandsInFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following line could not be parsed: {0}.
        /// </summary>
        public static string CLI_Executor_List_Error_Parsing_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_List_Error_Parsing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to split argument..
        /// </summary>
        public static string CLI_Executor_List_Error_Split {
            get {
                return ResourceManager.GetString("CLI_Executor_List_Error_Split", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file with MSIX Hero commands was defined..
        /// </summary>
        public static string CLI_Executor_List_NoFileDefined {
            get {
                return ResourceManager.GetString("CLI_Executor_List_NoFileDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the required command line-by-line, and then finish by pressing &lt;Enter&gt; twice..
        /// </summary>
        public static string CLI_Executor_List_NoFileDefined_Instructions {
            get {
                return ResourceManager.GetString("CLI_Executor_List_NoFileDefined_Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file &apos;{0}&apos; does not exist..
        /// </summary>
        public static string CLI_Executor_ManifestEdit_MissingFile_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_ManifestEdit_MissingFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification package created in &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_ModPack_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_ModPack_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new certificate for &apos;{0}&apos;….
        /// </summary>
        public static string CLI_Executor_NewCert_Creating_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_NewCert_Creating_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing certificate file to the list of trusted people….
        /// </summary>
        public static string CLI_Executor_NewCert_ImportingTrustedPeople {
            get {
                return ResourceManager.GetString("CLI_Executor_NewCert_ImportingTrustedPeople", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate has been imported to the Trusted People store..
        /// </summary>
        public static string CLI_Executor_NewCert_ImportingTrustedPeople_Success {
            get {
                return ResourceManager.GetString("CLI_Executor_NewCert_ImportingTrustedPeople_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate has been saved to &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_NewCert_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_NewCert_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening &apos;{0}&apos;….
        /// </summary>
        public static string CLI_Executor_OpeningFile_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_OpeningFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing &apos;{0}&apos; to &apos;{1}&apos;….
        /// </summary>
        public static string CLI_Executor_Pack_Packing_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Pack_Packing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing source directory {0}....
        /// </summary>
        public static string CLI_Executor_Pack_RemovingSource_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Pack_RemovingSource_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; has been created..
        /// </summary>
        public static string CLI_Executor_Pack_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Pack_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binary value must be a valid base64 string, a comma-separated list of byte values or a hex string representing bytes..
        /// </summary>
        public static string CLI_Executor_Registry_Error_Binary {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_Binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; does not represent a correct decimal value for a byte..
        /// </summary>
        public static string CLI_Executor_Registry_Error_ByteDecimal_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_ByteDecimal_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; does not represent a correct hex-string for a byte..
        /// </summary>
        public static string CLI_Executor_Registry_Error_ByteHex_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_ByteHex_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The comma-separated value &apos;{0}&apos; does not represent a correct byte sequence..
        /// </summary>
        public static string CLI_Executor_Registry_Error_CsvByte_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_CsvByte_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not within  the range of DWORD values ({1}-{2})..
        /// </summary>
        public static string CLI_Executor_Registry_Error_DwordRange_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_DwordRange_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid hexadecimal number..
        /// </summary>
        public static string CLI_Executor_Registry_Error_Hex_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_Hex_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hexadecimal string &apos;{0}&apos; could not be parsed..
        /// </summary>
        public static string CLI_Executor_Registry_Error_HexParsing_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_HexParsing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid number..
        /// </summary>
        public static string CLI_Executor_Registry_Error_Number_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Registry_Error_Number_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; could not be removed..
        /// </summary>
        public static string CLI_Executor_RemoveFile_Error_CouldNotRemove_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_RemoveFile_Error_CouldNotRemove_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; has been removed..
        /// </summary>
        public static string CLI_Executor_RemoveFile_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_RemoveFile_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving &apos;{0}&apos;….
        /// </summary>
        public static string CLI_Executor_SavingFile_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SavingFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one property to change is required..
        /// </summary>
        public static string CLI_Executor_SetIdentity_Error_NoProperty {
            get {
                return ResourceManager.GetString("CLI_Executor_SetIdentity_Error_NoProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the package name is invalid..
        /// </summary>
        public static string CLI_Executor_SetIdentity_Error_PackageName {
            get {
                return ResourceManager.GetString("CLI_Executor_SetIdentity_Error_PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the publisher is invalid..
        /// </summary>
        public static string CLI_Executor_SetIdentity_Error_PublisherFormat {
            get {
                return ResourceManager.GetString("CLI_Executor_SetIdentity_Error_PublisherFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the resource ID is invalid..
        /// </summary>
        public static string CLI_Executor_SetIdentity_Error_ResourceId {
            get {
                return ResourceManager.GetString("CLI_Executor_SetIdentity_Error_ResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed identity attribute &apos;{0}&apos; from &apos;{1}&apos; to &apos;{2}&apos;..
        /// </summary>
        public static string CLI_Executor_SetIdentity_Success_Change_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetIdentity_Success_Change_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set identity attribute &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        public static string CLI_Executor_SetIdentity_Success_Set_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetIdentity_Success_Set_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not set registry key &apos;{0}\{1}&apos;.
        /// </summary>
        public static string CLI_Executor_SetRegistryKey_Error_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetRegistryKey_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry key &apos;{0}\{1}&apos; has been set..
        /// </summary>
        public static string CLI_Executor_SetRegistryKey_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetRegistryKey_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not set registry value &apos;{0}&apos; to &apos;{1}&apos; ({2}) in &apos;{3}\{4}&apos;..
        /// </summary>
        public static string CLI_Executor_SetRegistryValue_Error_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetRegistryValue_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value type &apos;{0}&apos; could not be parsed..
        /// </summary>
        public static string CLI_Executor_SetRegistryValue_Error_ParseType_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetRegistryValue_Error_ParseType_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value type &apos;{0}&apos; is not supported..
        /// </summary>
        public static string CLI_Executor_SetRegistryValue_Error_TypeNotSupported_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetRegistryValue_Error_TypeNotSupported_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry value &apos;{0}&apos; has been set to &apos;{1}&apos; ({2}) in &apos;{3}\{4}&apos;..
        /// </summary>
        public static string CLI_Executor_SetRegistryValue_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_SetRegistryValue_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determining publisher name from Device Guard Signing certificate....
        /// </summary>
        public static string CLI_Executor_Sign_DeviceGuardDeterminingPublisher {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_DeviceGuardDeterminingPublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing &apos;{0}&apos; with Device Guard….
        /// </summary>
        public static string CLI_Executor_Sign_DeviceGuardSigning_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_DeviceGuardSigning_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing failed with error code {0}: {1}.
        /// </summary>
        public static string CLI_Executor_Sign_Error_Code_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_Code_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not use the configured password. Decryption of the string from settings failed..
        /// </summary>
        public static string CLI_Executor_Sign_Error_DecryptFailed {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_DecryptFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Guard has not been configured yet..
        /// </summary>
        public static string CLI_Executor_Sign_Error_DeviceGuardNoConfig {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_DeviceGuardNoConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid URI..
        /// </summary>
        public static string CLI_Executor_Sign_Error_InvalidTimestampUrl_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_InvalidTimestampUrl_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing failed: {0}.
        /// </summary>
        public static string CLI_Executor_Sign_Error_Message_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No certificate has been provided, and no default certificate has been configured in MSIX Hero settings..
        /// </summary>
        public static string CLI_Executor_Sign_Error_NoCertAndDefaultConfig {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_NoCertAndDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to sign with CLI without any extra signing parameters, configure your signature in MSIX Hero settings..
        /// </summary>
        public static string CLI_Executor_Sign_Error_NoConfig {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_NoConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option --{0}: {1}.
        /// </summary>
        public static string CLI_Executor_Sign_Error_Option_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_Option_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options --{0} and --{1} cannot be used together..
        /// </summary>
        public static string CLI_Executor_Sign_Error_OptionConflict_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_OptionConflict_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate with thumbprint &apos;{0}&apos; was not found..
        /// </summary>
        public static string CLI_Executor_Sign_Error_WrongThumbprint_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Error_WrongThumbprint_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New publisher name is &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_Sign_NewName_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_NewName_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing &apos;{0}&apos; with certificate &apos;{1}&apos;….
        /// </summary>
        public static string CLI_Executor_Sign_SigningCerFile_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_SigningCerFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing &apos;{0}&apos; with certificate [SHA1 = {1}]....
        /// </summary>
        public static string CLI_Executor_Sign_SigningSha_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_SigningSha_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package signed successfully!.
        /// </summary>
        public static string CLI_Executor_Sign_Success {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using current MSIX Hero signing options....
        /// </summary>
        public static string CLI_Executor_Sign_UsingCurrent {
            get {
                return ResourceManager.GetString("CLI_Executor_Sign_UsingCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing certificate from &apos;{0}&apos;….
        /// </summary>
        public static string CLI_Executor_Trust_Importing_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Trust_Importing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate has been imported..
        /// </summary>
        public static string CLI_Executor_Trust_Success {
            get {
                return ResourceManager.GetString("CLI_Executor_Trust_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing source package &apos;{0}&apos;....
        /// </summary>
        public static string CLI_Executor_Unpack_RemovingSource_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Unpack_RemovingSource_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package has been unpacked to &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_Unpack_Success_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Unpack_Success_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpacking &apos;{0}&apos; to &apos;{1}&apos;....
        /// </summary>
        public static string CLI_Executor_Unpack_Unpacking_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_Unpack_Unpacking_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing packages....
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Comparing {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Comparing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write to &apos;{0}&apos;. Access denied (error code: {1})..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_AccessDenied_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_AccessDenied_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid package format..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to XML file is invalid..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_InvalidPath {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to XML file is invalid. It must be a valid Windows path..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_InvalidWindowsPath {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_InvalidWindowsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to XML file is invalid..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_InvalidXMLPath {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_InvalidXMLPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (error code: {1}).
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_MessageCode_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_MessageCode_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new package path is required..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_NewPackageMissing {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_NewPackageMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected packages could not be analyzed, because they are not upgradable. For an upgrade to work, the package family name must be the same..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_NotSameFamily {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_NotSameFamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The old package path is required..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_OldPackageMissing {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_OldPackageMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The packages could not be compared..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_Unknown {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write the results to &apos;{0}&apos; (error code: {1}).
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_UnknownCode_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_UnknownCode_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected packages could not be analyzed, because the version of the &apos;oldPackage&apos; is newer than the version of the &apos;newPackage&apos;..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_Versioning {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_Versioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Consider using command line switch --force to ignore this check..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Error_Versioning_Hint {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Error_Versioning_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected packages have been successfully compared..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Success {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML file with results has been saved to &apos;{0}&apos;..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Success_File_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Success_File_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get more details, rerun this command with --xml &quot;&lt;output_file_path&gt;&quot; switch..
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Success_MoreDetails {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Success_MoreDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added files.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Added {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks = {0}.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Blocks_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Blocks_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks = {0} -&gt; {1}.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_BlocksChanged_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_BlocksChanged_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed files.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Changed {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count = {0}.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Count_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Count_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleted files.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Deleted {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Net size difference = {0} bytes.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_NetSizeDiff_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_NetSizeDiff_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New = {0} bytes.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_NewBytes_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_NewBytes_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old = {0} bytes.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_OldBytes_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_OldBytes_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package size.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_PackageSize {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_PackageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required download = {0} bytes.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_RequiredDownload_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_RequiredDownload_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size = {0}.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Size_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Size_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size = {0} -&gt; {1}.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_SizeChanged_Format {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_SizeChanged_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unchanged files.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_Unchanged {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_Unchanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update impact.
        /// </summary>
        public static string CLI_Executor_UpdateImpact_Summary_UpdateImpact {
            get {
                return ResourceManager.GetString("CLI_Executor_UpdateImpact_Summary_UpdateImpact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package has not been updated due to previous errors..
        /// </summary>
        public static string CLI_Executor_Warn_SkippedDueToPreviousErrors {
            get {
                return ResourceManager.GetString("CLI_Executor_Warn_SkippedDueToPreviousErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not use the configured password. Decryption of the string from settings failed..
        /// </summary>
        public static string CLI_InvalidPassword {
            get {
                return ResourceManager.GetString("CLI_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  bytes.
        /// </summary>
        public static string CommandLineParser_Bytes {
            get {
                return ResourceManager.GetString("CommandLineParser_Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group.
        /// </summary>
        public static string CommandLineParser_Group {
            get {
                return ResourceManager.GetString("CommandLineParser_Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; is defined with a bad format..
        /// </summary>
        public static string CommandLineParser_SentenceBadFormatConversionErrorOption {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceBadFormatConversionErrorOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value not bound to option name is defined with a bad format..
        /// </summary>
        public static string CommandLineParser_SentenceBadFormatConversionErrorValue {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceBadFormatConversionErrorValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token &apos;{0}&apos; is not recognized..
        /// </summary>
        public static string CommandLineParser_SentenceBadFormatTokenError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceBadFormatTokenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verb &apos;{0}&apos; is not recognized..
        /// </summary>
        public static string CommandLineParser_SentenceBadVerbSelectedError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceBadVerbSelectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR(S):.
        /// </summary>
        public static string CommandLineParser_SentenceErrorsHeadingText {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceErrorsHeadingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display this help screen..
        /// </summary>
        public static string CommandLineParser_SentenceHelpCommandTextOption {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceHelpCommandTextOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display more information on a specific command..
        /// </summary>
        public static string CommandLineParser_SentenceHelpCommandTextVerb {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceHelpCommandTextVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required option &apos;{0}&apos; is missing..
        /// </summary>
        public static string CommandLineParser_SentenceMissingRequiredOptionError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceMissingRequiredOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required value not bound to option name is missing..
        /// </summary>
        public static string CommandLineParser_SentenceMissingRequiredValueError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceMissingRequiredValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; has no value..
        /// </summary>
        public static string CommandLineParser_SentenceMissingValueOptionError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceMissingValueOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options: {0} are not compatible with {1}..
        /// </summary>
        public static string CommandLineParser_SentenceMutuallyExclusiveSetErrors {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceMutuallyExclusiveSetErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No verb selected..
        /// </summary>
        public static string CommandLineParser_SentenceNoVerbSelectedError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceNoVerbSelectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; is defined multiple times..
        /// </summary>
        public static string CommandLineParser_SentenceRepeatedOptionError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceRepeatedOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required..
        /// </summary>
        public static string CommandLineParser_SentenceRequiredWord {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceRequiredWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A sequence option &apos;{0}&apos; is defined with fewer or more items than required..
        /// </summary>
        public static string CommandLineParser_SentenceSequenceOutOfRangeErrorOption {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceSequenceOutOfRangeErrorOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A sequence value not bound to option name is defined with few items than required..
        /// </summary>
        public static string CommandLineParser_SentenceSequenceOutOfRangeErrorValue {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceSequenceOutOfRangeErrorValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error setting value to option &apos;{0}&apos;: {1}.
        /// </summary>
        public static string CommandLineParser_SentenceSetValueExceptionError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceSetValueExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; is unknown..
        /// </summary>
        public static string CommandLineParser_SentenceUnknownOptionError {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceUnknownOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USAGE:.
        /// </summary>
        public static string CommandLineParser_SentenceUsageHeadingText {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceUsageHeadingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display version information..
        /// </summary>
        public static string CommandLineParser_SentenceVersionCommandText {
            get {
                return ResourceManager.GetString("CommandLineParser_SentenceVersionCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading .
        /// </summary>
        public static string Reading {
            get {
                return ResourceManager.GetString("Reading", resourceCulture);
            }
        }
    }
}
