<UserControl x:Class="Otor.MsixHero.Ui.Modules.PackageList.View.PackageListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:view="clr-namespace:Otor.MsixHero.Ui.Modules.PackageList.View"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:modules="clr-namespace:Otor.MsixHero.Ui.Modules"
             xmlns:fluent="urn:fluent-ribbon"
             xmlns:configuration="clr-namespace:Otor.MsixHero.Infrastructure.Configuration;assembly=Otor.MsixHero.Infrastructure"
             xmlns:enums1="clr-namespace:Otor.MsixHero.Appx.Packaging.Installation.Enums;assembly=Otor.MsixHero.Appx"
             xmlns:viewModel="clr-namespace:Otor.MsixHero.Ui.Modules.PackageList.ViewModel"
             xmlns:view1="clr-namespace:Otor.MsixHero.Ui.Modules.PackageList.View"
             xmlns:routedCommand="clr-namespace:Otor.MsixHero.Ui.Commands.RoutedCommand"
             xmlns:commands="clr-namespace:Otor.MsixHero.Ui.Commands"
             xmlns:helpers="clr-namespace:Otor.MsixHero.Ui.Helpers"
             xmlns:progressOverlay="clr-namespace:Otor.MsixHero.Ui.Controls.ProgressOverlay"
             xmlns:checkedContent="clr-namespace:Otor.MsixHero.Ui.Controls.CheckedContent"
             xmlns:elements="clr-namespace:Otor.MsixHero.Ui.Modules.PackageList.ViewModel.Elements"
             xmlns:highlighter="clr-namespace:Otor.MsixHero.Ui.Controls.Highlighter"
             xmlns:modules1="clr-namespace:Otor.MsixHero.Ui.Modules"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance viewModel:PackageListViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/Vectors.xaml" />
                <ResourceDictionary Source="/Controls/CheckedContent/CheckedContent.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BitmapImage x:Key="DummyLogo" UriSource="icons8-sugar-cube-48.png" />
            <view1:PackageContextDisplayNameConverter x:Key="PackageContextDisplayNameConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="Search" Executed="SearchCommandBindingExecuted" />
    </UserControl.CommandBindings>
    <routedCommand:RoutedCommandHandlers.Commands>
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenAppsFeatures}" Command="{Binding CommandHandler.OpenAppsFeatures}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenDevSettings}" Command="{Binding CommandHandler.OpenDevSettings}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.RunTool}" Command="{Binding CommandHandler.RunTool}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenManifest}" Command="{Binding CommandHandler.OpenManifest}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenConfigJson}" Command="{Binding CommandHandler.OpenConfigJson}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenExplorer}" Command="{Binding CommandHandler.OpenExplorer}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.Deprovision}" Command="{Binding CommandHandler.Deprovision}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenExplorerUser}" Command="{Binding CommandHandler.OpenExplorerUser}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.RunPackage}" Command="{Binding CommandHandler.RunApp}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.StopPackage}" Command="{Binding CommandHandler.StopApp}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="Refresh" Command="{Binding CommandHandler.Refresh}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="Delete" Command="{Binding CommandHandler.RemovePackage}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenPowerShell}" Command="{Binding CommandHandler.OpenPowerShell}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenLogs}" Command="{Binding CommandHandler.OpenLogs}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.MountRegistry}" Command="{Binding CommandHandler.MountRegistry}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.CheckUpdates}" Command="{Binding CommandHandler.CheckUpdates}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.ChangeVolume}" Command="{Binding CommandHandler.ChangeVolume}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.DismountRegistry}" Command="{Binding CommandHandler.DismountRegistry}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.RemovePackage}" Command="{Binding CommandHandler.RemovePackage}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.CreateSelfSign}" Command="{Binding CommandHandler.NewSelfSignedCert}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.ExtractCertificate}" Command="{Binding CommandHandler.ExtractCert}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.InstallCertificate}" Command="{Binding CommandHandler.InstallCertificate}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenResign}" Command="{Binding CommandHandler.OpenResign}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.CertManager}" Command="{Binding CommandHandler.CertManager}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.AddPackage}" Command="{Binding CommandHandler.AddPackage}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenAppsFeatures}" Command="{Binding CommandHandler.OpenAppsFeatures}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.OpenDevSettings}" Command="{Binding CommandHandler.OpenDevSettings}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.Pack}" Command="{Binding CommandHandler.Pack}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.AppInstaller}" Command="{Binding CommandHandler.AppInstaller}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.PackageExpert}" Command="{Binding CommandHandler.PackageExpert}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.ModificationPackage}" Command="{Binding CommandHandler.ModificationPackage}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.AppAttach}" Command="{Binding CommandHandler.AppAttach}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.Unpack}" Command="{Binding CommandHandler.Unpack}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.UpdateImpact}" Command="{Binding CommandHandler.UpdateImpact}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="{x:Static commands:MsixHeroCommands.Winget}" Command="{Binding CommandHandler.Winget}" />
        <routedCommand:RoutedCommandHandler RoutedCommand="Copy" Command="{Binding CommandHandler.Copy}" />
    </routedCommand:RoutedCommandHandlers.Commands>
    <Grid Margin="0" x:Name="Grid">
        <Grid.Resources>
            <system:Boolean x:Key="True">True</system:Boolean>

            <ContextMenu x:Key="PackageContextMenu">
                <MenuItem Header="Copy...">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorCopy}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Name" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.Name}" InputGestureText=" ">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorTextInputForm}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Display name" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.DisplayName}" InputGestureText=" ">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorTextInputForm}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Full name" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.FullName}">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorPackage}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Version" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.Version}" InputGestureText=" ">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorNumberInputForm}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Publisher (display name)" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.Publisher}" InputGestureText=" ">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorTextInputForm}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Publisher (raw)" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.Subject}" InputGestureText=" ">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorUser}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Install path" Command="Copy" CommandParameter="{x:Static configuration:PackageProperty.InstallPath}" InputGestureText=" ">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorSettingsFolder}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Command="{x:Static commands:MsixHeroCommands.OpenExplorer}" Header="Open folder">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="M 3 5 L 3 10 L 3 27 L 7 27 L 7 29 L 13.007812 29 L 12.992188 27 L 19.037109 27 L 19.050781 29 L 25 29 L 25 27 L 29 27 L 29 7 L 13.414062 7 L 11.414062 5 L 3 5 z M 5 7 L 10.585938 7 L 11.585938 8 L 10.587891 9 L 5 9.0019531 L 5 7 z M 13.414062 9 L 27 9 L 27 25 L 25 25 L 25 17 L 7 17 L 7 18 L 7 25 L 5 25 L 5 11.001953 L 11.416016 11 L 13.414062 9 z M 9 19 L 23 19 L 23 27 L 21.037109 27 L 20.992188 21 L 10.949219 21 L 10.992188 27 L 9 27 L 9 19 z M 12.962891 23 L 19.007812 23 L 19.021484 25 L 12.978516 25 L 12.962891 23 z" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{x:Static commands:MsixHeroCommands.OpenManifest}" Header="Open manifest">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="M 6 3 L 6 29 L 26 29 L 26 9.59375 L 25.71875 9.28125 L 19.71875 3.28125 L 19.40625 3 Z M 8 5 L 18 5 L 18 11 L 24 11 L 24 27 L 8 27 Z M 20 6.4375 L 22.5625 9 L 20 9 Z" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{x:Static commands:MsixHeroCommands.OpenConfigJson}" Header="Open config.json">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorWrench}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Remove for">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorDelete}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Current user" Command="{x:Static commands:MsixHeroCommands.RemovePackage}">
                        <MenuItem.Icon>
                            <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorDeleteUser}" />
                        </MenuItem.Icon>
                        <MenuItem.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="All users"  Command="{x:Static commands:MsixHeroCommands.RemovePackage}">
                        <MenuItem.Icon>
                            <Image Source="{x:Static helpers:ShieldIcon.Source}" Stretch="None" UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Center" Margin="0 0 0 0" />
                        </MenuItem.Icon>
                        <MenuItem.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem Command="{x:Static commands:MsixHeroCommands.RunPackage}" Header="Start app">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="M 9 5.15625 L 9 26.84375 L 10.53125 25.84375 L 25.84375 16 L 10.53125 6.15625 Z M 11 8.8125 L 22.15625 16 L 11 23.1875 Z" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{x:Static commands:MsixHeroCommands.StopPackage}" Header="Stop app">
                    <MenuItem.Icon>
                        <Path Style="{StaticResource MediumIcon}" Data="{StaticResource VectorStop}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Run command in context..." x:Name="ContextMenuRunCommand" />
            </ContextMenu>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <progressOverlay:ProgressOverlay
            FocusVisualStyle="{x:Null}"
            Grid.Row="0"
            Grid.Column="0"
            IsShown="{Binding IsLoading}"
            Message="{Binding LoadingMessage}"
            Progress="{Binding LoadingProgress}">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border 
                IsEnabled="{Binding IsLoading, Converter={StaticResource NegativeConverter}}"
                x:Name="Search" SizeChanged="OnViewListSizeChanged" DockPanel.Dock="Top" Grid.Column="0" Height="46" Grid.Row="0" Margin="0">

                    <DockPanel>

                        <!--<ToggleButton 
                    Visibility="Collapsed"
                    Background="Transparent"
                    IsHitTestVisible="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource NegativeConverter}}"
                    x:Name="ToggleSort" DockPanel.Dock="Right" Width="30" Padding="0" Height="30" BorderThickness="0" Margin="0 0 0 0">
                    <Path SnapsToDevicePixels="True" UseLayoutRounding="True" Data="{StaticResource VectorSort}" Style="{StaticResource MediumIcon}" />
                </ToggleButton>
                <Popup 
                    IsOpen="{Binding ElementName=ToggleSort, Path=IsChecked}" AllowsTransparency="True"
                    PopupAnimation="Fade"
                    StaysOpen="False"
                    Focusable="False"
                    HorizontalOffset="-10"
                    VerticalOffset="-7"
                    PlacementTarget="{Binding ElementName=ToggleSort}" Placement="Bottom">
                    <Border Focusable="False"  MinWidth="170">
                        <Border Background="White" BorderBrush="#ccc" BorderThickness="1" Margin="10">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="8" Opacity="0.2"  ShadowDepth="0" Direction="-90" RenderingBias="Quality" />
                            </Border.Effect>
                            <StackPanel Margin="0">
                                <StackPanel.Resources>
                                    <Style TargetType="RadioButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="RadioButton">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <checkedContent:CheckedContent Content="{TemplateBinding Content}" IsChecked="{TemplateBinding IsChecked}" ShowGlyph="True" ShowShield="False" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#CDE6F7" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Resources>
                                <RadioButton Focusable="False" Content="By name" Margin="0 0 0 4" />
                                <RadioButton Focusable="False" Content="By publisher" Margin="0 0 0 4" />
                                <RadioButton Focusable="False" Content="By version" Margin="0 0 0 4" />
                                <RadioButton Focusable="False" Content="By type" Margin="0 0 0 8" />
                                <CheckBox Focusable="False" Content="Descending" />
                            </StackPanel>
                        </Border>
                    </Border>
                </Popup>-->
                        <ToggleButton 
                    Visibility="Collapsed"
                    Background="Transparent"
                    Unchecked="ToggleContext_OnUnchecked"
                    IsHitTestVisible="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Converter={StaticResource NegativeConverter}}"
                    x:Name="ToggleContext" DockPanel.Dock="Right" Padding="0" Height="30" BorderThickness="0" Margin="0 0 6 0">
                            <Border>
                                <checkedContent:CheckedContent Focusable="False" ShowShield="False" ShowGlyph="False" IsHitTestVisible="False">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Context, Converter={StaticResource PackageContextDisplayNameConverter}}" Margin="4 0" />
                                        <Path 
                                    Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                    Height="3" Width="6"
                                    Fill="#FF606060" 
                                    HorizontalAlignment="Center" Margin="0 5 0 0" 
                                    VerticalAlignment="Center"/>
                                    </StackPanel>
                                </checkedContent:CheckedContent>
                            </Border>
                        </ToggleButton>
                        <RadioButton Visibility="Collapsed" DockPanel.Dock="Right" GroupName="g2a" IsChecked="{Binding Context, ConverterParameter={x:Static enums1:PackageContext.AllUsers}, Converter={StaticResource EnumToBooleanConverter}}" Focusable="False" Margin="8 0 4 0">
                            <TextBlock Focusable="False" Text="{Binding Source={x:Static enums1:PackageContext.AllUsers}, Converter={StaticResource PackageContextDisplayNameConverter}}" Margin="0 0 0 0" />
                            <RadioButton.Tag>
                                <system:Boolean>False</system:Boolean>
                            </RadioButton.Tag>
                        </RadioButton>
                        <RadioButton Visibility="Collapsed" DockPanel.Dock="Right" GroupName="g1a" IsChecked="{Binding Context, ConverterParameter={x:Static enums1:PackageContext.CurrentUser}, Converter={StaticResource EnumToBooleanConverter}}" Focusable="False" Margin="4 0 0 0">
                            <TextBlock Focusable="False" Text="{Binding Source={x:Static enums1:PackageContext.CurrentUser}, Converter={StaticResource PackageContextDisplayNameConverter}}" Margin="0 0 0 0" />
                        </RadioButton>
                        <Popup 
                    Visibility="Collapsed"
                    HorizontalOffset="-10"
                    VerticalOffset="-7"
                    StaysOpen="False"
                    IsOpen="{Binding ElementName=ToggleContext, Path=IsChecked}" AllowsTransparency="True"
                    PopupAnimation="Fade"
                    Focusable="False"
                    PlacementTarget="{Binding ElementName=ToggleContext}" Placement="Bottom">
                            <Border Focusable="False" MinWidth="150">
                                <Border Background="White" BorderBrush="#ccc" BorderThickness="1" Margin="10" Focusable="False">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="8" Opacity="0.2"  ShadowDepth="0" Direction="-90" RenderingBias="Quality" />
                                    </Border.Effect>
                                    <StackPanel Margin="0" Focusable="False">
                                        <StackPanel.Resources>
                                            <Style TargetType="RadioButton">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RadioButton">
                                                            <Border Focusable="False" Background="{TemplateBinding Background}">
                                                                <checkedContent:CheckedContent Focusable="False" x:Name="PART_Content" Content="{TemplateBinding Content}" IsChecked="{TemplateBinding IsChecked}" ShowGlyph="True" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="Tag">
                                                                    <Trigger.Value>
                                                                        <system:Boolean>True</system:Boolean>
                                                                    </Trigger.Value>
                                                                    <Setter TargetName="PART_Content" Property="ShowShield" Value="True" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#CDE6F7" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>
                                        <RadioButton PreviewMouseDown="UIElement_OnPreviewMouseDown" GroupName="g1" IsChecked="{Binding Context, ConverterParameter={x:Static enums1:PackageContext.CurrentUser}, Converter={StaticResource EnumToBooleanConverter}}" Focusable="False" Margin="0 0 0 4">
                                            <TextBlock Focusable="False" Text="{Binding Source={x:Static enums1:PackageContext.CurrentUser}, Converter={StaticResource PackageContextDisplayNameConverter}}" Margin="4 0 0 0" />
                                        </RadioButton>
                                        <RadioButton PreviewMouseDown="UIElement_OnPreviewMouseDown" GroupName="g2" IsChecked="{Binding Context, ConverterParameter={x:Static enums1:PackageContext.AllUsers}, Converter={StaticResource EnumToBooleanConverter}}" Focusable="False" Margin="0 0 0 4">
                                            <TextBlock Focusable="False" Text="{Binding Source={x:Static enums1:PackageContext.AllUsers}, Converter={StaticResource PackageContextDisplayNameConverter}}" Margin="4 0 0 0" />
                                            <RadioButton.Tag>
                                                <system:Boolean>False</system:Boolean>
                                            </RadioButton.Tag>
                                        </RadioButton>
                                    </StackPanel>
                                </Border>
                            </Border>
                        </Popup>
                        <!--<ComboBox 
                    Visibility="Collapsed"
                    x:Name="ComboBoxContext"
                    Template="{DynamicResource ComboBoxTemplate}" SelectedValue="{Binding Context}" SelectedValuePath="Tag" DockPanel.Dock="Right" Background="Transparent" BorderThickness="0" Height="30">
                    <ComboBoxItem Tag="{x:Static enums:PackageContext.CurrentUser}">Current user</ComboBoxItem>
                    <ComboBoxItem Tag="{x:Static enums:PackageContext.AllUsers}">
                        <uac:UACControl ShowShield="True" Padding="0 0 6 0">
                            <TextBlock Text="All users" Margin="0 0 15 0" />
                        </uac:UACControl>
                    </ComboBoxItem>
                </ComboBox>-->

                        <Grid Margin="5 0">
                            <TextBox 
                                Padding="26 0 20 0" 
                                BorderThickness="0"
                                x:Name="SearchBox" VerticalAlignment="Center" Height="22" HorizontalAlignment="Stretch" Text="{Binding SearchKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=400}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#efefef" />
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="#fafafa" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <DockPanel IsHitTestVisible="False" VerticalAlignment="Center" Margin="5 0">
                                <Path Fill="Black" Data="M 19 3 C 13.488281 3 9 7.488281 9 13 C 9 15.394531 9.839844 17.589844 11.25 19.3125 L 3.28125 27.28125 L 4.71875 28.71875 L 12.6875 20.75 C 14.410156 22.160156 16.605469 23 19 23 C 24.511719 23 29 18.511719 29 13 C 29 7.488281 24.511719 3 19 3 Z M 19 5 C 23.429688 5 27 8.570313 27 13 C 27 17.429688 23.429688 21 19 21 C 14.570313 21 11 17.429688 11 13 C 11 8.570313 14.570313 5 19 5 Z" Width="32" Height="32">
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                    </Path.LayoutTransform>
                                </Path>
                                <TextBlock TextTrimming="CharacterEllipsis" Text="Search applications..." Foreground="#777" VerticalAlignment="Center" Margin="5 0 0 0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=SearchBox, Path=IsFocused}" Value="False" />
                                                        <Condition Binding="{Binding ElementName=SearchBox, Path=Text.Length}">
                                                            <Condition.Value>
                                                                <system:Int32>0</system:Int32>
                                                            </Condition.Value>
                                                        </Condition>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DockPanel>
                            <Button ToolTip="Clear" Padding="0" Width="26" MinWidth="26" Click="ClearSearchField" FontFamily="Webdings" Height="26" MinHeight="26" Margin="2" BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Content="&#x72;">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=SearchBox, Path=Text.Length}">
                                                        <Condition.Value>
                                                            <system:Int32>0</system:Int32>
                                                        </Condition.Value>
                                                    </Condition>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DockPanel>
                </Border>

                <AdornerDecorator
                        Grid.Column="0"
                        Grid.Row="1"
                        x:Name="PanelListView"
                        Visibility="Collapsed">

                    <ListView 
                        IsEnabled="{Binding IsLoading, Converter={StaticResource NegativeConverter}}"
                        MouseDoubleClick="ListOnMouseDoubleClick"
                        x:Name="ListView"
                        ContextMenuOpening="PackageContextMenu_OnContextMenuOpening"
                        ContextMenu="{StaticResource PackageContextMenu}">
                        <ListView.InputBindings>
                            <KeyBinding Modifiers="Control" Key="F" Command="Search" />
                        </ListView.InputBindings>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="10" />
                                <Setter Property="BorderThickness" Value="0 0 0 0" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                                <Border BorderBrush="#e1e1e1" BorderThickness="0 0 0 0">
                                                    <GridViewRowPresenter Margin="{TemplateBinding Padding}"  />
                                                </Border>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsProvisioned}" Value="{StaticResource True}">
                                        <Setter Property="Background" Value="#CCFFD1" />
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#B1D6F0" />
                                        <Setter Property="Background" Value="#E6F2FA" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="#B1D6F0" />
                                        <Setter Property="Background" Value="#CDE6F7" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView x:Name="GridView">
                                <GridView.Columns>
                                    <GridViewColumn Width="48">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader IsHitTestVisible="False" Content="Icon" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                                <Grid>
                                                    <Border Background="#2B579A" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <Border Background="{Binding TileColor}" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Left">
                                                            <Image Source="{Binding Image, TargetNullValue={StaticResource DummyLogo}, FallbackValue={StaticResource DummyLogo}}" VerticalAlignment="Center" HorizontalAlignment="Center" MaxWidth="48" MaxHeight="48" Stretch="Uniform" StretchDirection="DownOnly" />
                                                        </Border>
                                                    </Border>
                                                    <Border 
                                                        ToolTip="This app is currently running"
                                                        Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Bottom" HorizontalAlignment="Right" CornerRadius="16" Width="16" Height="16" Background="MediumSeaGreen" BorderBrush="White" BorderThickness="2">
                                                        <Border.RenderTransform>
                                                            <TranslateTransform X="8" Y="8" />
                                                        </Border.RenderTransform>
                                                    </Border>
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Name" Tag="{x:Static configuration:PackageSort.Name}" Click="ColumnClicked" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                                <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Opacity="0.7" Text="{Binding DisplayName}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Version" Tag="{x:Static configuration:PackageSort.Version}" Click="ColumnClicked" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                                <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Opacity="0.7" Text="{Binding Version}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Architecture" Tag="{x:Static configuration:PackageSort.Architecture}" Click="ColumnClicked" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                                <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Opacity="0.7" Text="{Binding Architecture}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Publisher" Tag="{x:Static configuration:PackageSort.Publisher}" Click="ColumnClicked" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                                <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Opacity="0.7" Text="{Binding DisplayPublisherName}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Package type" Tag="{x:Static configuration:PackageSort.PackageType}" Click="ColumnClicked" />
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                                <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Opacity="0.7" Text="{Binding DisplayPackageType}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                        <ListView.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource GroupStyle}" />
                        </ListView.GroupStyle>
                    </ListView>
                </AdornerDecorator>
                <Border
                    Visibility="Collapsed"
                    x:Name="PanelListBox"
                    Grid.Row="1"
                    Grid.Column="0">
                    <ListBox 
                        FocusVisualStyle="{x:Null}"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource NegativeConverter}}"
                        x:Name="ListBox"
                        SelectionMode="Extended"
                        MouseDoubleClick="ListOnMouseDoubleClick"
                        ContextMenuOpening="PackageContextMenu_OnContextMenuOpening"
                        ContextMenu="{StaticResource PackageContextMenu}">
                        <ListBox.InputBindings>
                            <KeyBinding Modifiers="Control" Key="F" Command="Search" />
                        </ListBox.InputBindings>
                        <ListBox.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource GroupStyle}" />
                        </ListBox.GroupStyle>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Padding" Value="10" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="BorderThickness" Value="0 0 0 0" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                                <Border BorderBrush="#e1e1e1" BorderThickness="0 0 0 0">
                                                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                                                </Border>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsProvisioned}" Value="{StaticResource True}">
                                        <Setter Property="Background" Value="#CCFFD1" />
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#B1D6F0" />
                                        <Setter Property="Background" Value="#E6F2FA" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="#B1D6F0" />
                                        <Setter Property="Background" Value="#CDE6F7" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type elements:InstalledPackageViewModel}">
                                <DockPanel>
                                    <!--<Border Margin="-2" DockPanel.Dock="Left" Background="White" Width="40" Height="40" Padding="2" BorderThickness="2" BorderBrush="#D2D2D2" VerticalAlignment="Center" HorizontalAlignment="Center">-->
                                    <Border Background="#2B579A" Width="32" Height="32" DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Grid>

                                            <Border Background="{Binding TileColor, Mode=OneTime}" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Left">
                                                <!--<Ellipse Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Ellipse.Fill>
                                                    <ImageBrush>
                                                        <ImageBrush.ImageSource>
                                                            <BitmapImage DecodePixelHeight="32" DecodePixelWidth="32" UriSource="{Binding Image}" />
                                                        </ImageBrush.ImageSource>
                                                    </ImageBrush>
                                                </Ellipse.Fill>
                                            </Ellipse>-->
                                                <Image Source="{Binding Image, Mode=OneTime, TargetNullValue={StaticResource DummyLogo}, FallbackValue={StaticResource DummyLogo}}" VerticalAlignment="Center" HorizontalAlignment="Center" MaxWidth="48" MaxHeight="48" Stretch="Uniform" StretchDirection="DownOnly" />

                                                <!--<Border.OpacityMask>
                                                <ImageBrush ImageSource="/Resources/32pxOpacityMask.png" />
                                            </Border.OpacityMask>-->
                                            </Border>
                                            <Border
                                                ToolTip="This app is currently running" 
                                                Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Bottom" HorizontalAlignment="Right" CornerRadius="16" Width="16" Height="16" Background="MediumSeaGreen" BorderBrush="White" BorderThickness="2">
                                                <Border.RenderTransform>
                                                    <TranslateTransform X="8" Y="8" />
                                                </Border.RenderTransform>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <StackPanel DockPanel.Dock="Right">
                                        <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Text="{Binding Version, Mode=OneTime}" VerticalAlignment="Center" TextAlignment="Right" />
                                        <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Text="{Binding Architecture, Mode=OneTime}" DockPanel.Dock="Right" VerticalAlignment="Center" TextAlignment="Right"  Opacity="0.65" />
                                    </StackPanel>

                                    <StackPanel Margin="10 0">
                                        <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Text="{Binding DisplayName, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                                        <TextBlock highlighter:Highlighter.Selection="{Binding ElementName=SearchBox, Path=DataContext.SearchKey}" Text="{Binding DisplayPublisherName, Mode=OneTime}" TextTrimming="CharacterEllipsis" Opacity="0.65" />
                                    </StackPanel>

                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Grid>
        </progressOverlay:ProgressOverlay>

        <Border x:Name="Separator" SnapsToDevicePixels="True" HorizontalAlignment="Left" UseLayoutRounding="True" Grid.Row="0" Grid.RowSpan="2" Margin="0 0 0 0" Width="1" Grid.Column="1" Background="#ddd" VerticalAlignment="Stretch" />

        <Border x:Name="PackageDetails" Margin="0 0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2">
            <ContentControl mvvm:RegionManager.RegionName="{x:Static modules1:Constants.RegionPackageSidebar}" />
        </Border>

        <GridSplitter x:Name="GridSplitter" Grid.Row="0" Grid.RowSpan="2" Width="10" HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" />

    </Grid>
</UserControl>
