<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:progressOverlay="clr-namespace:Otor.MsixHero.Ui.Controls.ProgressOverlay"
                    xmlns:helpers="clr-namespace:Otor.MsixHero.Ui.Helpers">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/msixhero;component/Themes/Colors.xaml" />
        <ResourceDictionary Source="/msixhero;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/msixhero;component/Themes/Tabs.xaml" />
        <ResourceDictionary Source="/msixhero;component/Themes/Vectors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBlock">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="progressOverlay:ProgressOverlay">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="progressOverlay:ProgressOverlay">
                    <Grid>
                        <ContentPresenter x:Name="PART_Content" IsHitTestVisible="True" />
                        <Border 
                            x:Name="PART_ProgressReport"
                            Background="{TemplateBinding Background}" IsHitTestVisible="False">
                            <StackPanel 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <TextBlock 
                                    x:Name="PART_Overlay"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Message, TargetNullValue='Please wait...', FallbackValue='Please wait...'}" TextAlignment="Center" Opacity="0">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform Y="40" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <ProgressBar
                                    Opacity="0.0"
                                    UseLayoutRounding="True"
                                    SnapsToDevicePixels="True"
                                    Margin="0 8 0 0" Foreground="{StaticResource Otor.MsixHero.Brushes.Accent}" x:Name="PART_ProgressBar" Height="8" 
                                    Width="200" HorizontalAlignment="Center" 
                                    helpers:AnimatedProgressBar.Progress="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Progress}">
                                    <ProgressBar.RenderTransform>
                                        <TranslateTransform Y="40" />
                                    </ProgressBar.RenderTransform>
                                </ProgressBar>

                                <Button 
                                    Opacity="0.0"
                                    UseLayoutRounding="True"
                                    SnapsToDevicePixels="True"
                                    Visibility="{TemplateBinding SupportsCancelling, ConverterParameter={StaticResource BooleanToVisibilityConverter}}" 
                                    x:Name="PART_CancelButton" 
                                    HorizontalAlignment="Center" 
                                    Margin="0 8 0 0" 
                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CancelCommand}" 
                                    Content="Cancel">
                                    <Button.RenderTransform>
                                        <TranslateTransform Y="40" />
                                    </Button.RenderTransform>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CancelCommand" Value="{x:Null}">
                            <Setter TargetName="PART_CancelButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsShown" Value="True">
                            <Setter TargetName="PART_Content" Property="IsHitTestVisible" Value="False" />
                            <Setter TargetName="PART_Content" Property="Focusable" Value="False" />
                            <Setter TargetName="PART_ProgressReport" Property="IsHitTestVisible" Value="True" />
                            <!--<Setter TargetName="PART_Content" Property="Opacity" Value="0.33" />-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame Value="1.0" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="1.0" KeyTime="00:00:00.15" />
                                            <SplineDoubleKeyFrame Value="0.2" KeyTime="00:00:00.5" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame Value="0.0" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="0.0" KeyTime="00:00:00.1" />
                                            <SplineDoubleKeyFrame Value="1.0" KeyTime="00:00:00.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame Value="0.0" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="0.0" KeyTime="00:00:00.2" />
                                            <SplineDoubleKeyFrame Value="1.0" KeyTime="00:00:00.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_CancelButton" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame Value="0.0" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="0.0" KeyTime="00:00:00.3" />
                                            <SplineDoubleKeyFrame Value="1.0" KeyTime="00:00:00.5" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Overlay" Storyboard.TargetProperty="RenderTransform.Y">
                                            <SplineDoubleKeyFrame Value="40" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="40" KeyTime="00:00:00.1" />
                                            <SplineDoubleKeyFrame Value="00" KeyTime="00:00:00.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="RenderTransform.Y">
                                            <SplineDoubleKeyFrame Value="40" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="40" KeyTime="00:00:00.2" />
                                            <SplineDoubleKeyFrame Value="00" KeyTime="00:00:00.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_CancelButton" Storyboard.TargetProperty="RenderTransform.Y">
                                            <SplineDoubleKeyFrame Value="40" KeyTime="00:00:00.0" />
                                            <SplineDoubleKeyFrame Value="40" KeyTime="00:00:00.3" />
                                            <SplineDoubleKeyFrame Value="00" KeyTime="00:00:00.5" />
                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:0.4" To="0.0" AccelerationRatio="0.5" DecelerationRatio="0.5" Storyboard.TargetName="PART_CancelButton" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="00:00:0.4" To="0.0" AccelerationRatio="0.5" DecelerationRatio="0.5" Storyboard.TargetName="PART_ProgressBar" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="00:00:0.4" To="0.0" AccelerationRatio="0.5" DecelerationRatio="0.5" Storyboard.TargetName="PART_Overlay" Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="00:00:0.4" To="1.0" AccelerationRatio="0.5" DecelerationRatio="0.5" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Progress" Value="-1">
                            <Setter TargetName="PART_ProgressBar" Property="IsIndeterminate" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ValidationControlTemplate">
        <Grid>
            <AdornedElementPlaceholder x:Name="PART_Adorned"  Grid.Column="0" />
            <Border Grid.Column="0" BorderBrush="#D27162" BorderThickness="2" CornerRadius="0" Focusable="False" IsHitTestVisible="False" />
            <Border 
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Width="30"
                Background="Transparent"
                ToolTipService.InitialShowDelay="0"
                ToolTipService.ShowDuration="20000"
                ToolTipService.PlacementTarget="{Binding ElementName=PART_Adorned, Path=AdornedElement}"
                ToolTipService.VerticalOffset="2"
                ToolTip="{Binding ElementName=PART_Adorned, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">

                <Viewbox
                    Height="18"
                    Width="18"
                    Margin="0 0 6 0"
                    VerticalAlignment="Center">
                    <Path 
                        Width="32"
                        Height="32"
                        Fill="#787878"
                        Data="M 16 3.21875 L 15.125 4.71875 L 3.125 25.5 L 2.28125 27 L 29.71875 27 L 28.875 25.5 L 16.875 4.71875 Z M 16 7.21875 L 26.25 25 L 5.75 25 Z M 15 14 L 15 20 L 17 20 L 17 14 Z M 15 21 L 15 23 L 17 23 L 17 21 Z">
                    </Path>
                </Viewbox>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="#eeeeee" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="PasswordBox" x:Key="{x:Type PasswordBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
    </Style>

    <Style TargetType="CheckBox" x:Key="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="RadioButton" x:Key="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type xctk:ButtonSpinner}" x:Key="{x:Type xctk:ButtonSpinner}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />
    </Style>

    <Style TargetType="ComboBox" x:Key="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationControlTemplate}" />

    </Style>

    <Style TargetType="ComboBoxItem" x:Key="{x:Type ComboBoxItem}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="Button" x:Key="{x:Type Button}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="10 4" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="ToggleButton" x:Key="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="10 4" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="Label">
        <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="ExtraLight" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0 0 0 10" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="LargeIcon">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Fill" Value="{StaticResource Otor.MsixHero.Brushes.Accent}" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="MediumIcon">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Fill" Value="{StaticResource Otor.MsixHero.Brushes.Accent}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="DataHeader">
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Margin" Value="0 0 0 2" />
    </Style>

    <Style TargetType="TextBlock" x:Key="DataValue">
        <Setter Property="Margin" Value="0 0 0 8" />
    </Style>

    <Style TargetType="TextBox" x:Key="DataValueTextBlock" BasedOn="{StaticResource TextBlock}">
        <Setter Property="Margin" Value="-1 0 0 8" />
    </Style>

    <Style TargetType="{x:Type GroupItem}" x:Key="GroupStyle">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <Border DockPanel.Dock="Top" Background="#F0F0F0" Height="24">
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Right" FontWeight="SemiBold" VerticalAlignment="Center" Margin="10 0">
                                    <Run Text="{Binding ItemCount, Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock FontWeight="SemiBold" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="10 0 0 0">
                                    <Run Text="{Binding Name, Mode=OneWay}" />
                                </TextBlock>
                            </DockPanel>
                        </Border>
                        <ItemsPresenter />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Border BorderBrush="#e1e1e1" BorderThickness="0 0 0 0">
                            <GridViewRowPresenter Margin="{TemplateBinding Padding}"  />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#B1D6F0" />
                <Setter Property="Background" Value="#E6F2FA" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#B1D6F0" />
                <Setter Property="Background" Value="#CDE6F7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="Transparent" Offset="0" />
                        <GradientStop Color="#bbb" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border UseLayoutRounding="True" SnapsToDevicePixels="True" BorderThickness="0,0,1,1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <TextBlock
                                TextTrimming="CharacterEllipsis"
                                x:Name="ContentHeader" 
                                Text="{TemplateBinding Content}"
                                Margin="{TemplateBinding Padding}" 
                                Width="{TemplateBinding Width}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <Thumb x:Name="PART_HeaderGripper"
                                   Width="10"
                                   VerticalAlignment="Stretch"
                                   BorderThickness="0"
                                   HorizontalAlignment="Right"
                                   Margin="-6 0 -4 0"
                                   Background="Transparent">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="{TemplateBinding Background}" />
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E6F2FA" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#CDE6F7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Border BorderBrush="#e1e1e1" BorderThickness="0 0 0 1">
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#B1D6F0" />
                <Setter Property="Background" Value="#E6F2FA" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#B1D6F0" />
                <Setter Property="Background" Value="#CDE6F7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="{x:Type ListBox}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="{x:Type ListView}" x:Key="{x:Type ListView}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Padding="0 0 6 6" Background="Transparent">
                        <Border x:Name="Border"
                                Background="White"
                                BorderThickness="1"
                                Margin="0"
                                BorderBrush="#AAAAAA">
                            <Border.Effect>
                                <DropShadowEffect 
                                    BlurRadius="4"
                                    Direction="315"
                                    Opacity="0.3"
                                    ShadowDepth="2"
                                    Color="{DynamicResource MahApps.Colors.MenuShadow}" />
                            </Border.Effect>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="TextBlock.TextAlignment" Value="Left" />
        <!--<Setter Property="ItemsSource" Value="{Binding Items}" />-->
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Name="Border" >
                        <Grid Background="Transparent">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <!-- icon -->
                                <ColumnDefinition Width="*"/>
                                <!-- content -->
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <!-- gestures -->
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemGlyphColumnGroup"/>
                                <!-- gestures -->
                            </Grid.ColumnDefinitions>

                            <Rectangle x:Name="focus" Grid.ColumnSpan="4" Opacity="0.2"  Fill="{StaticResource Otor.MsixHero.Brushes.Accent}" Visibility="Collapsed" />

                            <ContentPresenter 
                                x:Name="Icon"
                                Margin="8 4 0 4"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                ContentSource="Icon"
                                Width="16"
                                Height="16"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <ContentPresenter 
                                x:Name="cPres"
                                Margin="8 7 4 7"
                                Grid.Column="1"
                                TextBlock.FontSize="12"
                                ContentSource="Header"
                                HorizontalAlignment="Left"
                                RecognizesAccessKey="True" />

                            <TextBlock 
                                Text="{TemplateBinding MenuItem.InputGestureText}" 
                                x:Name="gesture"
                                Margin="4 4 8 4" 
                                Grid.Column="2"
                                HorizontalAlignment="Right"
                                TextAlignment="Right"
                                VerticalAlignment="Center"
                                Opacity="0.5" />

                            <Path 
                                Visibility="Visible" 
                                x:Name="ArrowMore" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right" 
                                Data="M 0 0 4 4 0 8 1 8 5 4 1 0 Z" 
                                Fill="Black" 
                                Width="11" 
                                Grid.Column="3"
                                Height="10" 
                                Margin="0 4 4 4" />

                            <Popup
                                Grid.Column="0" 
                                Name="Popup"
                                Placement="Right"
                                VerticalOffset="-1"
                                HorizontalOffset="-6"
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Fade">
                                <Border Background="Transparent" Padding="0 0 6 6">
                                    <Border 
                                        Name="SubmenuBorder"
                                        SnapsToDevicePixels="True"
                                        Background="White"
                                        BorderBrush="#AAAAAA"
                                        CornerRadius="0"
                                        BorderThickness="1" >
                                        <StackPanel  
                                            IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        <Border.Effect>
                                            <DropShadowEffect 
                                                BlurRadius="4"
                                                Direction="315"
                                                Opacity="0.3"
                                                ShadowDepth="2"
                                                Color="{DynamicResource MahApps.Colors.MenuShadow}" />
                                        </Border.Effect>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowMore"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon"
                                Property="Visibility"
                                Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowMore"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowMore"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="focus" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="cPres" Property="TextBlock.Foreground" Value="White" />
                            <Setter TargetName="gesture" Property="Foreground" Value="White" />
                            <Setter TargetName="ArrowMore" Property="Fill" Value="White" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="focus" Property="Visibility" Value="Visible" />
                            <Setter TargetName="focus" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Height="1" Fill="#DDDDDD" Margin="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
