//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Otor.MsixHero.Infrastructure.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Otor.MsixHero.Infrastructure.Resources.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open the file {0}..
        /// </summary>
        public static string Infrastructure_Error_CouldNotOpenFile_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Error_CouldNotOpenFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating hash {0}%….
        /// </summary>
        public static string Infrastructure_Hashing_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Hashing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating named pipe {0}….
        /// </summary>
        public static string Infrastructure_Ipc_CreatingNamedPipe_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_CreatingNamedPipe_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating named pipe for {0}….
        /// </summary>
        public static string Infrastructure_Ipc_CreatingNamedPipeFor_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_CreatingNamedPipeFor_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start the helper..
        /// </summary>
        public static string Infrastructure_Ipc_Error_CouldNotStart {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Error_CouldNotStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start the process..
        /// </summary>
        public static string Infrastructure_Ipc_Error_CouldNotStartProcess {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Error_CouldNotStartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reporting exception.
        /// </summary>
        public static string Infrastructure_Ipc_Error_Exception {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Error_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get exclusive access..
        /// </summary>
        public static string Infrastructure_Ipc_Error_ExclusiveAccess {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Error_ExclusiveAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No receiver for type {0} registered..
        /// </summary>
        public static string Infrastructure_Ipc_Error_NoReceiver_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Error_NoReceiver_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading command from stream….
        /// </summary>
        public static string Infrastructure_Ipc_ReadingCmd {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_ReadingCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested: {0} with return value of type {1}….
        /// </summary>
        public static string Infrastructure_Ipc_RequestedNonVoid_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_RequestedNonVoid_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested: {0} with no returned value….
        /// </summary>
        public static string Infrastructure_Ipc_RequestedVoid_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_RequestedVoid_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returning results via named pipe….
        /// </summary>
        public static string Infrastructure_Ipc_ReturningResults {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_ReturningResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returning actual results via named pipe….
        /// </summary>
        public static string Infrastructure_Ipc_Sending {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Sending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security SID is {0}..
        /// </summary>
        public static string Infrastructure_Ipc_SID {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_SID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for a client connection….
        /// </summary>
        public static string Infrastructure_Ipc_Waiting {
            get {
                return ResourceManager.GetString("Infrastructure_Ipc_Waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating volume &apos;{0}&apos; with required size {1}….
        /// </summary>
        public static string Infrastructure_Sdk_CreatingVolume_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_CreatingVolume_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting file &apos;{0}&apos;….
        /// </summary>
        public static string Infrastructure_Sdk_DeletingFile_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_DeletingFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DISKPART.EXE command in file &apos;{0}&apos;:.
        /// </summary>
        public static string Infrastructure_Sdk_DiskPartCommand_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_DiskPartCommand_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided account is not authorized to sign via the Device Guard Signing Service..
        /// </summary>
        public static string Infrastructure_Sdk_Error_DeviceGuardAccountNotAuthorized {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_DeviceGuardAccountNotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON token file is invalid..
        /// </summary>
        public static string Infrastructure_Sdk_Error_DeviceGuardInvalidJson {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_DeviceGuardInvalidJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to reach the Device Guard Signing Service..
        /// </summary>
        public static string Infrastructure_Sdk_Error_DeviceGuardNotReachable {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_DeviceGuardNotReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diskpart.exe failed with error code {0}..
        /// </summary>
        public static string Infrastructure_Sdk_Error_DiskPart_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_DiskPart_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate SDK part {0}..
        /// </summary>
        public static string Infrastructure_Sdk_Error_MissingSdk_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_MissingSdk_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension {0} is not supported..
        /// </summary>
        public static string Infrastructure_Sdk_Error_NotSupportedExtension_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_NotSupportedExtension_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected certificate cannot be used for signing purposes (EKU mismatch)..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_EkuMismatch {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_EkuMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected certificate has expired..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_Expired {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_Expired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional info from SignTool.exe:.
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_ExtraInfo {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_ExtraInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected certificate failed validation of one of the following filters:.
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_FailedValidation {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_FailedValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected certificate does not meet the {0} filter..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_Filter_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_Filter_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SignTool.exe returned with exit code {0}..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected certificate does not have a private key..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_NoPrivateKey {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_NoPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package publisher and certificate subject are not the same. MSIX app cannot be signed with the selected certificate..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_SubjectPublisherNotEqual {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_SubjectPublisherNotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected timestamp server could not be used to sign the package (error {0})..
        /// </summary>
        public static string Infrastructure_Sdk_Error_SigningError_Timestamp_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_SigningError_Timestamp_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start process..
        /// </summary>
        public static string Infrastructure_Sdk_Error_StartProcess {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_StartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSV content:.
        /// </summary>
        public static string Infrastructure_Sdk_Error_TaskListCsv {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_TaskListCsv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data format..
        /// </summary>
        public static string Infrastructure_Sdk_Error_TaskListInvalidDataFormat {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_TaskListInvalidDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tasklist.exe returned non zero exit code..
        /// </summary>
        public static string Infrastructure_Sdk_Error_TaskListNonZeroExitCode {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Error_TaskListNonZeroExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing {0} {1}.
        /// </summary>
        public static string Infrastructure_Sdk_Executing_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_Executing_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting drive and assigning drive letter….
        /// </summary>
        public static string Infrastructure_Sdk_FormattingAndAssigning {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_FormattingAndAssigning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killing the process PID={0}….
        /// </summary>
        public static string Infrastructure_Sdk_KillingPid_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_KillingPid_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MakeAppx.exe returned exit code {0}..
        /// </summary>
        public static string Infrastructure_Sdk_MakeAppx_EditCode_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MakeAppx_EditCode_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MakeAppx.exe returned exit code {0} due to error {1}..
        /// </summary>
        public static string Infrastructure_Sdk_MakeAppx_EditCodeError_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MakeAppx_EditCodeError_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting file {0}….
        /// </summary>
        public static string Infrastructure_Sdk_MakeAppx_ExtractingFile_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MakeAppx_ExtractingFile_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying {0} to {1}….
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_CopyingFile {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_CopyingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation requires admin permissions..
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_Error_AdminRights {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_Error_AdminRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original directory not available..
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_Error_OriginalDirUnavailable {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_Error_OriginalDirUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not expand MSIX Package to the VHD file. The maximum size of the virtual disk is smaller than the file size of expanded MSIX package. Try using a bigger disk size..
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_Error_TooSmallSize {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_Error_TooSmallSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process returned exit code {0}..
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_ProcessExitCode {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_ProcessExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing temporary folder {0}….
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_RemovingTempFolder_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_RemovingTempFolder_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected MSIX Hero running with package identity. MSIXMGR must be started from a temporary location….
        /// </summary>
        public static string Infrastructure_Sdk_MsixMgr_RunningWithIdentity {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_MsixMgr_RunningWithIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process exited with an improper exit code {0}..
        /// </summary>
        public static string Infrastructure_Sdk_ProcessExited_WrongExitCode_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_ProcessExited_WrongExitCode_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process has finished and did not return anything to standard error..
        /// </summary>
        public static string Infrastructure_Sdk_ProcessFinished_NoStdErr {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_ProcessFinished_NoStdErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process has finished and did not return anything to standard output..
        /// </summary>
        public static string Infrastructure_Sdk_ProcessFinished_NoStdOut {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_ProcessFinished_NoStdOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process has finished and returned the following standard error:.
        /// </summary>
        public static string Infrastructure_Sdk_ProcessFinished_StdErr {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_ProcessFinished_StdErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process has finished and returned the following standard output:.
        /// </summary>
        public static string Infrastructure_Sdk_ProcessFinished_StdOut {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_ProcessFinished_StdOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismounting volume….
        /// </summary>
        public static string Infrastructure_Sdk_VhdDismount {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_VhdDismount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mounting volume &apos;{0}&apos;….
        /// </summary>
        public static string Infrastructure_Sdk_VhdMount_Format {
            get {
                return ResourceManager.GetString("Infrastructure_Sdk_VhdMount_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read the settings. Default settings will be used..
        /// </summary>
        public static string Infrastructure_Settings_Error_UseDefault {
            get {
                return ResourceManager.GetString("Infrastructure_Settings_Error_UseDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version &apos;{0}&apos; could not be parsed as a version string..
        /// </summary>
        public static string Infrastructure_WrongVersion_Format {
            get {
                return ResourceManager.GetString("Infrastructure_WrongVersion_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressing {0}….
        /// </summary>
        public static string MakeAppx_Compressing {
            get {
                return ResourceManager.GetString("MakeAppx_Compressing", resourceCulture);
            }
        }
    }
}
