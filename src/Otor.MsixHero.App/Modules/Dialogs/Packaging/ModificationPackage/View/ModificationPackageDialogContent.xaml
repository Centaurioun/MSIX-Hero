<UserControl x:Class="Otor.MsixHero.App.Modules.Dialogs.Packaging.ModificationPackage.View.ModificationPackageDialogContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:builder1="clr-namespace:Otor.MsixHero.Appx.Packaging.ModificationPackages.Entities;assembly=Otor.MsixHero.Appx"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls1="clr-namespace:Otor.MsixHero.App.Controls"
             xmlns:view="clr-namespace:Otor.MsixHero.App.Controls.CertificateSelector.View"
             xmlns:validation="clr-namespace:Otor.MsixHero.App.Helpers.Validation"
             xmlns:viewModel="clr-namespace:Otor.MsixHero.App.Modules.Dialogs.Packaging.ModificationPackage.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance viewModel:ModificationPackageViewModel}">
    <TabControl>
        <TabItem Header="Properties">
            <b:Interaction.Behaviors>
                <validation:ValidationBehavior ValidatedChangeable="{Binding TabProperties}" />
            </b:Interaction.Behaviors>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <AdornerDecorator>
                    <StackPanel>
                        <StackPanel>
                            <Label Style="{StaticResource FormLabel}">Display options</Label>
                            <TextBlock 
                                controls1:RequiredAdorner.IsRequired="True" 
                                Style="{StaticResource LabelTextBlock}"
                                Text="Displayed package name" />
                            <TextBox Text="{Binding DisplayName.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />

                            <TextBlock 
                                controls1:RequiredAdorner.IsRequired="True" 
                                Style="{StaticResource LabelTextBlock}"
                                Text="Displayed publisher name" 
                                Margin="0 16 0 6" />
                            <TextBox Margin="0 0 0 16" Text="{Binding PublisherDisplayName.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />

                            <Label Style="{StaticResource FormLabel}" Margin="0 16 0 10">Package identity</Label>
                            <TextBlock 
                                controls1:RequiredAdorner.IsRequired="True" 
                                Style="{StaticResource LabelTextBlock}"
                                Text="Package name" />
                            <TextBox Text="{Binding Name.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />

                            <TextBlock 
                                controls1:RequiredAdorner.IsRequired="True" 
                                Style="{StaticResource LabelTextBlock}"
                                Text="Publisher name" 
                                Margin="0 16 0 6" />
                            <TextBox Text="{Binding PublisherName.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />

                            <TextBlock 
                                controls1:RequiredAdorner.IsRequired="True" 
                                Style="{StaticResource LabelTextBlock}"
                                Text="Package version" 
                                Margin="0 16 0 6" />
                            <TextBox Width="250" HorizontalAlignment="Left" Text="{Binding Version.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />
                        </StackPanel>
                    </StackPanel>
                </AdornerDecorator>
            </ScrollViewer>
        </TabItem>
        <TabItem 
            Header="Parent package">
            <b:Interaction.Behaviors>
                <validation:ValidationBehavior ValidatedChangeable="{Binding TabParentPackage}"></validation:ValidationBehavior>
            </b:Interaction.Behaviors>
            <AdornerDecorator>
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top">
                        <ComboBox SelectedValuePath="Tag" SelectedValue="{Binding PackageSourceMode.CurrentValue}" Margin="0 0 0 16">
                            <ComboBoxItem Tag="{x:Static viewModel:PackageSourceMode.FromFile}" x:Name="FromFileCombo" Content="From file path" />
                            <ComboBoxItem Tag="{x:Static viewModel:PackageSourceMode.FromProperties}" x:Name="FromPropertiesCombo" Content="Manually entered identifiers" />
                        </ComboBox>

                        <StackPanel Visibility="{Binding ElementName=FromFileCombo, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 0 0">
                            <TextBlock 
                            controls1:RequiredAdorner.IsRequired="True"
                            Text="Source file path for the parent package:" Margin="0 0 0 6" Style="{StaticResource DataHeader}" />
                            <DockPanel>
                                <Button Content="..." Command="{Binding SourcePath.Browse}" DockPanel.Dock="Right" Margin="6 0 0 0" />
                                <TextBox 
                                    IsReadOnly="True" 
                                    Text="{Binding SourcePath.CurrentValue, Mode=TwoWay, 
                                    ValidatesOnDataErrors=True, 
                                    UpdateSourceTrigger=PropertyChanged}" />
                            </DockPanel>
                        </StackPanel>
                    </StackPanel>
                    <ScrollViewer 
                        Margin="0 0 0 0" 
                        Visibility="{Binding ElementName=FromPropertiesCombo, Path=IsSelected, Converter={StaticResource BooleanToHiddenVisibilityConverter}}" 
                        VerticalScrollBarVisibility="Auto" 
                        HorizontalScrollBarVisibility="Disabled" 
                        DockPanel.Dock="Top">
                        <AdornerDecorator>
                            <StackPanel>
                                <TextBlock 
                                    controls1:RequiredAdorner.IsRequired="True" 
                                    Style="{StaticResource LabelTextBlock}"
                                    Text="Parent package name" />
                                <TextBox Text="{Binding ParentName.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />

                                <TextBlock 
                                    controls1:RequiredAdorner.IsRequired="True" 
                                    Style="{StaticResource LabelTextBlock}"
                                    Text="Parent publisher name" 
                                    Margin="0 16 0 6" />
                                <TextBox Text="{Binding ParentPublisher.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" />
                            </StackPanel>
                        </AdornerDecorator>
                    </ScrollViewer>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>
        <TabItem Header="Content">
            <b:Interaction.Behaviors>
                <validation:ValidationBehavior ValidatedChangeable="{Binding TabContent}" />
            </b:Interaction.Behaviors>
            <ScrollViewer  
                VerticalScrollBarVisibility="Auto" 
                HorizontalScrollBarVisibility="Disabled" >
                <AdornerDecorator>
                    <StackPanel>
                        <Label Style="{StaticResource FormLabel}" Content="Output type" />
                        <RadioButton GroupName="g1" IsChecked="{Binding Create.CurrentValue, ConverterParameter={x:Static builder1:ModificationPackageBuilderAction.Manifest}, Converter={StaticResource EnumToBooleanConverter}}" Content="Uncompressed package (AppxManifest.xml)" />
                        <RadioButton GroupName="g2" IsChecked="{Binding Create.CurrentValue, ConverterParameter={x:Static builder1:ModificationPackageBuilderAction.Msix}, Converter={StaticResource EnumToBooleanConverter}}" Content="Unsigned MSIX modification package" Margin="0 6" />
                        <RadioButton x:Name="Radio3"  GroupName="g3" IsChecked="{Binding Create.CurrentValue, ConverterParameter={x:Static builder1:ModificationPackageBuilderAction.SignedMsix}, Converter={StaticResource EnumToBooleanConverter}}" Content="Signed MSIX modification package" />

                        <Label Content="Additional content" Margin="0 16 0 6" Style="{StaticResource FormLabel}" />
                        <TextBlock Style="{StaticResource LabelTextBlock}" Text="Specify which extra content (folders, files and/or registry keys) should be merged by MSIX Hero." />
                        <CheckBox 
                            IsEnabled="{Binding IsIncludeVfsFoldersEnabled}" 
                            IsChecked="{Binding IncludeVfsFolders.CurrentValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                            Margin="0 0 0 6">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="VFS folder structure from the parent package" VerticalAlignment="Center" />
                                <Control 
                                    ToolTip="If this option is selected, creating uncompressed sources for a modification package will also create empty folders, matching the original VFS structure of the parent package. This is useful for win32 add-ons and modification packages authoring."
                                    Style="{StaticResource HelpIcon}" 
                                    VerticalAlignment="Center" 
                                    Margin="2 -2" />
                            </StackPanel>
                        </CheckBox>
                        <Border Visibility="{Binding IsIncludeVfsFoldersEnabled, Converter={StaticResource NegativeBooleanToVisibilityConverter}}" 
                        Background="{StaticResource MsixHero.Dialog.Bar.Background}" Margin="22 -3 0 16">
                            <TextBlock TextWrapping="Wrap" Margin="6" Foreground="#555">
                                <Run Text="This option is available only when the output file is uncompressed (AppxManifest.xml) and the parent package is selected from an existing package path." />
                            </TextBlock>
                        </Border>
                        <CheckBox IsChecked="{Binding IncludeFiles.CurrentValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Files and directories from disk" Margin="0 0 0 3" />
                        <TextBlock Style="{StaticResource DataHeader}" Visibility="{Binding IncludeFiles.CurrentValue, Converter={StaticResource BooleanToVisibilityConverter}}" Text="Import files and folders from the following location into the package root directory." TextWrapping="Wrap" Margin="22 0 0 6" />
                        <DockPanel Visibility="{Binding IncludeFiles.CurrentValue, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="22 0 0 16">
                            <Button Command="{Binding SourceFolder.Browse}" Content="..." DockPanel.Dock="Right" Margin="4 0 0 0" />
                            <TextBox 
                        Text="{Binding SourceFolder.CurrentValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </DockPanel>
                        <CheckBox Content="Registry keys and values" Margin="0 3 0 3" IsChecked="{Binding IncludeRegistry.CurrentValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <TextBlock Style="{StaticResource DataHeader}" Margin="22 0 0 6" Text="Import registry from the specified *.reg file:" Visibility="{Binding IncludeRegistry.CurrentValue, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <DockPanel Margin="22 0 0 16" Visibility="{Binding IncludeRegistry.CurrentValue, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button Content="..." DockPanel.Dock="Right" Margin="4 0 0 0" Command="{Binding SourceRegistryFile.Browse}" />
                            <TextBox 
                        Text="{Binding SourceRegistryFile.CurrentValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </DockPanel>
                    </StackPanel>
                </AdornerDecorator>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Signature" Visibility="{Binding ElementName=Radio3, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
            <b:Interaction.Behaviors>
                <validation:ValidationBehavior ValidatedChangeable="{Binding TabCertificate}" />
            </b:Interaction.Behaviors>
            <AdornerDecorator>
                <view:CertificateSelectorView DataContext="{Binding TabCertificate}" />
            </AdornerDecorator>
        </TabItem>
    </TabControl>
</UserControl>
