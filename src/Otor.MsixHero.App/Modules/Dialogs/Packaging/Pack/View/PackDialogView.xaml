<UserControl x:Class="Otor.MsixHero.App.Modules.Dialogs.Packaging.Pack.View.PackDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:validation="clr-namespace:Otor.MsixHero.App.Helpers.Validation"
             xmlns:controls="clr-namespace:Otor.MsixHero.App.Controls"
             xmlns:view="clr-namespace:Otor.MsixHero.App.Controls.CertificateSelector.View"
             xmlns:viewModel="clr-namespace:Otor.MsixHero.App.Modules.Dialogs.Packaging.Pack.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance viewModel:PackViewModel}">

    <TabControl>
        <TabItem Header="Source + target">
            <b:Interaction.Behaviors>
                <validation:ValidationBehavior ValidatedChangeable="{Binding TabSource}" />
            </b:Interaction.Behaviors>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <AdornerDecorator>
                    <StackPanel>
                        <TextBlock 
                            controls:RequiredAdorner.IsRequired="True"
                            Style="{StaticResource LabelTextBlock}"
                            Text="Full path to an folder where extracted files are" />
                        <DockPanel>
                            <Button TabIndex="3" Padding="10 0" Content="..." DockPanel.Dock="Right" Command="{Binding InputPath.Browse}" Margin="4 0 0 0" />
                            <TextBox TabIndex="2" Text="{Binding InputPath.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" IsReadOnly="True" />
                        </DockPanel>

                        <TextBlock
                                        controls:RequiredAdorner.IsRequired="True" 
                                        Style="{StaticResource LabelTextBlock}" 
                                        Text="Full path to the output MSIX package" Margin="0 16 0 6" />
                        <DockPanel>
                            <Button TabIndex="5" Padding="10 0" Content="..." DockPanel.Dock="Right" Command="{Binding OutputPath.Browse}" Margin="4 0 0 0" />
                            <TextBox TabIndex="4" Text="{Binding OutputPath.CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" IsReadOnly="True" />
                        </DockPanel>

                        <Border Background="#eeeeee" Visibility="{Binding IsLoadingPrePackOptions, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Analyzing the selected folder..." Margin="8" />
                        </Border>

                        <Border 
                            Margin="0 6 0 0"
                            Background="#eeffee" 
                            Visibility="{Binding PrePackOptions.ManifestPresent, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}, TargetNullValue={x:Static Visibility.Collapsed}}">
                            <StackPanel Margin="8">
                                <TextBlock TextWrapping="Wrap" Text="This is an unpacked MSIX package. The manifest file (AppxManifest.xml) will be taken as-is during packaging." />
                            </StackPanel>
                        </Border>

                        <Border 
                            Margin="0 6 0 0"
                            Background="LightYellow" 
                            Visibility="{Binding PrePackOptions.CanConvert, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}, TargetNullValue={x:Static Visibility.Collapsed}}">
                            <StackPanel Margin="8">
                                <TextBlock TextWrapping="Wrap" Text="Your file does not contain manifest file. MSIX Hero will create one for you if you proceed." />

                                <TextBlock Text="Select for which executables entry points (applications) should be created." Margin="0 16 0 0" />
                                <ScrollViewer
                                    MaxHeight="100"
                                    VerticalScrollBarVisibility="Auto"
                                    HorizontalScrollBarVisibility="Disabled"
                                    Margin="0 6 0 16">
                                    <ItemsControl 
                                        ItemsSource="{Binding PrePackOptions.EntryPoints}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type viewModel:ISelectableItem}">
                                                <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding DisplayContent}" Margin="0 3" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>

                                <DockPanel 
                                    Visibility="{Binding PrePackOptions.CanConvertRegistry, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Path Data="{StaticResource SmallHelp}" Style="{StaticResource SmallIcon}" VerticalAlignment="Center" Margin="0 0 6 0" />
                                    <TextBlock Text="MSIX Hero found at least one file with .reg extension. Do you want to convert it to MSIX registry?" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0" />
                                </DockPanel>

                                <ComboBox 
                                    Visibility="{Binding PrePackOptions.CanConvertRegistry, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    DisplayMemberPath="DisplayContent"
                                    Margin="0 6 0 16"
                                    SelectedItem="{Binding PrePackOptions.SelectedRegistry}"
                                    ItemsSource="{Binding PrePackOptions.RegistryCandidates}" />

                                <DockPanel 
                                    Visibility="{Binding PrePackOptions.CanConvertRegistry, Converter={StaticResource NegativeBooleanToVisibilityConverter}}">
                                    <Path Data="{StaticResource SmallHelp}" Style="{StaticResource SmallIcon}" VerticalAlignment="Center" Margin="0 0 6 0" />
                                    <TextBlock Text="The selected folder does not contain any .reg file, so no registry conversion will take place." TextWrapping="Wrap" VerticalAlignment="Center" Margin="0" />
                                </DockPanel>
                            </StackPanel>
                        </Border>

                        <Border
                            Margin="0 6 0 0"
                            Background="#ffeeee" Visibility="{Binding PrePackOptions, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}, TargetNullValue={x:Static Visibility.Collapsed}}">
                            <StackPanel Margin="8">
                                <TextBlock TextWrapping="Wrap" Text="Selected folder contains no manifest files, and no executable files have been found. Packing to MSIX format is not possible." />
                            </StackPanel>
                        </Border>

                        <CheckBox Margin="0 10 0 0" Content="Compress files according to their type" IsChecked="{Binding Compress.CurrentValue}" />
                        <CheckBox Margin="0 6 0 0" Content="Perform basic integrity checks" IsChecked="{Binding Validate.CurrentValue}" />
                        <CheckBox Margin="0 6 0 0" Content="Sign this package" IsChecked="{Binding Sign.CurrentValue}" />
                        <CheckBox Margin="0 6 0 0" Content="Remove input folder after packing" IsChecked="{Binding RemoveDirectory.CurrentValue}" />

                    </StackPanel>
                </AdornerDecorator>
            </ScrollViewer>
        </TabItem>
        <TabItem Visibility="{Binding Sign.CurrentValue, Converter={StaticResource BooleanToVisibilityConverter}}" Header="Signature">
            <b:Interaction.Behaviors>
                <validation:ValidationBehavior ValidatedChangeable="{Binding TabSigning}" />
            </b:Interaction.Behaviors>
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel>
                    <view:CertificateSelectorView DataContext="{Binding SelectedCertificate}" />

                    <TextBlock
                                    DockPanel.Dock="Top" 
                                    Style="{StaticResource LabelTextBlock}"
                                    Text="Package publisher name" 
                                    Margin="0 16 0 6" />

                    <CheckBox 
                        Content="Override package publisher with the certificate subject (recommended)" 
                        IsChecked="{Binding OverrideSubject.CurrentValue}" />
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>
