//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Otor.MsixHero.Registry.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Otor.MsixHero.Registry.Resources.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty key path (line {0})..
        /// </summary>
        public static string Registry_Error_EmptyKeyPath_Format {
            get {
                return ResourceManager.GetString("Registry_Error_EmptyKeyPath_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while parsing line {0} (unexpected end of file)..
        /// </summary>
        public static string Registry_Error_Eol_Format {
            get {
                return ResourceManager.GetString("Registry_Error_Eol_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name/content pair cannot be identified (line {0})..
        /// </summary>
        public static string Registry_Error_InvalidNameContentPair_Format {
            get {
                return ResourceManager.GetString("Registry_Error_InvalidNameContentPair_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type/value pair could not be identified (line {0})..
        /// </summary>
        public static string Registry_Error_InvalidTypeValuePair_Format {
            get {
                return ResourceManager.GetString("Registry_Error_InvalidTypeValuePair_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while parsing line {0}: {1}..
        /// </summary>
        public static string Registry_Error_LineParsingFailed_Format {
            get {
                return ResourceManager.GetString("Registry_Error_LineParsingFailed_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be parsed as a name..
        /// </summary>
        public static string Registry_Error_NameParsingFailed_Format {
            get {
                return ResourceManager.GetString("Registry_Error_NameParsingFailed_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String does not end with quotes (line {0})..
        /// </summary>
        public static string Registry_Error_NoEndingQuote_Format {
            get {
                return ResourceManager.GetString("Registry_Error_NoEndingQuote_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No root found (line {0})..
        /// </summary>
        public static string Registry_Error_NoRoot_Format {
            get {
                return ResourceManager.GetString("Registry_Error_NoRoot_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry file does not exist..
        /// </summary>
        public static string Registry_Error_RegFileNotFound {
            get {
                return ResourceManager.GetString("Registry_Error_RegFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number is too big for DWORD (line {0})..
        /// </summary>
        public static string Registry_Error_TooBigDwordNumber_Format {
            get {
                return ResourceManager.GetString("Registry_Error_TooBigDwordNumber_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number is too big for QWORD (line {0})..
        /// </summary>
        public static string Registry_Error_TooBigQwordNumber_Format {
            get {
                return ResourceManager.GetString("Registry_Error_TooBigQwordNumber_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type is empty (line {0})..
        /// </summary>
        public static string Registry_Error_TypeEmpty_Format {
            get {
                return ResourceManager.GetString("Registry_Error_TypeEmpty_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be parsed: unknown type (line {0})..
        /// </summary>
        public static string Registry_Error_UnknownType_Format {
            get {
                return ResourceManager.GetString("Registry_Error_UnknownType_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hex(4) type must be a list of 4 hexadecimal values, in little-indian byte order (line {0})..
        /// </summary>
        public static string Registry_Error_WrongHex4_Format {
            get {
                return ResourceManager.GetString("Registry_Error_WrongHex4_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hex(5) type must be a list of 4 hexadecimal values, in big-indian byte order (line {0})..
        /// </summary>
        public static string Registry_Error_WrongHex5_Format {
            get {
                return ResourceManager.GetString("Registry_Error_WrongHex5_Format", resourceCulture);
            }
        }
    }
}
